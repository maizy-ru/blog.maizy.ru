<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog.maizy.ru</title><link href="http://blog.maizy.ru/" rel="alternate"></link><link href="http://blog.maizy.ru/feeds/tags/hardware/atom.xml" rel="self"></link><id>http://blog.maizy.ru/</id><updated>2015-11-12T00:00:00+03:00</updated><entry><title>Мониторинг CO2 и работа с USB на scala</title><link href="http://blog.maizy.ru/posts/mt8057-usb-hid-scala" rel="alternate"></link><updated>2015-11-12T00:00:00+03:00</updated><author><name>Никита Ковалев</name></author><id>tag:blog.maizy.ru,2015-11-12:posts/mt8057-usb-hid-scala</id><summary type="html">&lt;p&gt;Озадачился мониторингом CO2 в помещениях. Сначала смотрел на отдельные датчики, думая собрать на коленке и rPi, но потом нашёл дешёвый сборный комплект &lt;a href="http://masterkit.ru/shop/others/dadget/1266110"&gt;Masterkit MT8057&lt;/a&gt;. Он настолько отличный, что с удовольствием его рекламирую.&lt;/p&gt;
&lt;p&gt;В результате у меня &lt;a href="#res"&gt;получился драйвер к MT8057 на scala и stand alone утилита&lt;/a&gt;, ниже в посте поделюсь некоторыми заметками к этой реализации.&lt;/p&gt;
&lt;h3&gt;Драйвер MT8057&lt;/h3&gt;
&lt;p&gt;Для MT8057 есть opensource реализация утилиты для съёма параметров от Олега Булатова написанная на C – &lt;a href="https://github.com/dmage/co2mon"&gt;co2mon&lt;/a&gt;. co2mon вариант хороший и рабочий, поддерживает и OS X, и Linux. Наверное, я бы справился докрутить туда выгрузку данных в InfluxDB, куда я собирался сложить все метрики, но решил пописать своих велосипедов, попрактиковаться в низкоуровневых штуках на scala и вспомнить работу с USB.&lt;/p&gt;
&lt;p&gt;В первый подход взял хороший и зрелый проект &lt;a href="http://usb4java.org/"&gt;usb4java&lt;/a&gt;, но оказалось, что с поддержкой OS X там беда. Требуются извращения типа &lt;a href="https://github.com/libusb/libusb/wiki/FAQ#How_can_I_run_libusb_applications_under_Mac_OS_X_if_there_is_already_a_kernel_extension_installed_for_the_device"&gt;выгрузки-загрузки kext'ов&lt;/a&gt;, которые у меня ещё и не завелись с первого раза.&lt;/p&gt;
&lt;p&gt;Во второй подход взял &lt;a href="https://github.com/gary-rowe/hid4java"&gt;hid4java&lt;/a&gt;, этот продукт хоть и анонсируется, как годный к production использованию, ещё достаточно сырой. Шаг влево, шаг вправо и ловишь jvm crash где-то в кишках интеграции с C-шной библиотекой. Написан через &lt;a href="https://github.com/java-native-access/jna"&gt;JNA&lt;/a&gt;, внутри лежат скомпилированные библиотеки для Linux x86_64, Linux ARM, OS X и ещё нескольких платформ. На OS X работает без всяких танцев с kext'ами. Из проблем – API не очень удобный, хуки вызываются из каких попало тредов, у меня это обходится с помощью обёртки с потокобезопасной очередью. Часть методов работает как бы правильно, возвращает правильные Java объекты, но при попытке что-то вызвать у этого объекта получаешь ошибку или crash, так что пришлось &lt;a href="https://github.com/maizy/ambient7/blob/41e6b92a9ca21769d6e9c7c5a47868d1740f8b5a/mt8057-agent/src/main/scala/ru/maizy/ambient7/mt8057agent/MT8057Service.scala#L99-L101"&gt;добавить костыль&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;HID это отдельный класс USB устройств, поэтому не всегда будет выбор между этими библиотеками, в частности usb4java (а вернее libusb) ничего про HID &lt;a href="http://www.libusb.org/wiki/APIs#libusb-1.0currentAPIandimplementation"&gt;не знает и знать не собирается&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Scala для работы с байтами&lt;/h3&gt;
&lt;p&gt;В scala всё просто и удобно. Массивы java типа &lt;code&gt;byte[]&lt;/code&gt; в Scala превращаются в &lt;code&gt;Array[Byte]&lt;/code&gt;. Вооружившись в добавок &lt;code&gt;scala.collection.JavaConversions&lt;/code&gt; можно писать привычный scala код.&lt;/p&gt;
&lt;p&gt;Внутри драйвера есть &lt;a href="https://github.com/maizy/ambient7/blob/master/mt8057-agent/src/main/scala/ru/maizy/ambient7/mt8057agent/MessageDecoder.scala"&gt;зубодробительный код с распаковкой данных&lt;/a&gt; от MT8057 и всё это неплохо легло в scala код, местами даже функциональный.&lt;/p&gt;
&lt;p&gt;&lt;a name="res"/&gt;&lt;/p&gt;
&lt;h3&gt;Результат&lt;/h3&gt;
&lt;p&gt;На выходе у меня получился драйвер MT8057 и декодер к HID пакетам с данными. В отдельный артефакт я их не выделял, но при необходимости это можно сделать.&lt;/p&gt;
&lt;p&gt;Про драйвер можно ничего не знать и использовать готовую утилиту &lt;a href="https://github.com/maizy/ambient7#mt8057-agent"&gt;ambient7-mt8057-agent&lt;/a&gt; которая из зависимостей требует только jre 1.6+ и пока умеет выводить данные в stdout/stderr (для записи в текстовый лог) или работать в интерактивном режиме с ANSI цветами в консоле. На подходе ещё возможность писать в InfluxDB. Готовый jar можно &lt;a href="https://github.com/maizy/ambient7#download"&gt;скачать в github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Про InfluxDB, если удастся с ним подружиться, расскажу отдельно.&lt;/p&gt;</summary><category term="scala"></category><category term="hardware"></category><category term="ambient7"></category></entry></feed>