<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>blog.maizy.ru - conference</title><link>https://blog.maizy.ru/</link><description></description><lastBuildDate>Wed, 09 Dec 2015 00:00:00 +0300</lastBuildDate><item><title>Видео со ScalaDays 2015 San Francisco</title><link>https://blog.maizy.ru/posts/scala-days-2015-sf</link><description>&lt;p&gt;Заметки к некоторым видео с главной scala конференции. Все видео и слайды давно доступны на сайте &lt;a href="https://www.parleys.com/channel/scala-days-san-francisco-2015"&gt;parleys.com&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://www.parleys.com/tutorial/scala-where-came-from-where-its-going"&gt;Scala - where it came from, where it's going - Martin Odersky&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Key note конференции. Советую всем, кто интересуется будущим scala и взглядом на это Мартина. Упоминали новый компилятор dotty, scala.js, scala 2.12. Кстати да, DSL для XML собираются вынести из языка в строковые интерполяторы.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://www.parleys.com/tutorial/akka-http-reactive-web-toolkit"&gt;Akka HTTP: the Reactive Web Toolkit - Roland Kuhn&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Про стримы в Akka, с демонстрациями кода. Роланд начинает с соединения TCP со стримами, описывает реализации кастомных протоколов и доходит к тому, как на всём этом реализован HTTP. В ответах на вопросы к докладу упомянуто много планов по развитию стримов и HTTP в akka. Из важного я узнал, что netty внутри play планируют заменить на новый HTTP core.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://www.parleys.com/tutorial/reactive-slick-database-programming"&gt;Reactive Slick for Database Programming - Stefan Zeiger&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;В начале доклада капитанские вещи о том, какие проблемы есть с БД в асинхронных окружениях и как их принято решать. Затем описывается state и IO монады. Затем объяснятся как slick решает вопросы доступа к БД, представления результатов и зачем там Futures. Интересную мысль, которую я вынес, что при текущей моделе БД асинхронные драйвера, которые стали появляться, не решают проблему, так как внизу БД всё равно работает в синхронном стиле.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://www.parleys.com/tutorial/type-level-programming-scala-101"&gt;Type-level Programming in Scala 101 - Joe Barnes&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Весёлая вводная в type-level программирование без углубления в незначительные на первых этапах детали. С примерами кода и тестов. Доклад в режиме ответов на вопросы, которые, к сожалению, не всегда слышно.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://www.parleys.com/tutorial/function-passing-style-new-model-asynchronous-distributed-programming"&gt;Function-Passing Style, A New Model for Asynchronous and Distributed Programming - Heather Miller&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Интересный доклад о попытках написать решение, которое в некоторых случаях может использоваться как замена модели акторов. В двух словах идея в том, что стейт может жить в одном месте, а обработка его вызываться из другого, для чего по сети можно передавать лямбды, вместо данных. При этом топология решения может быть любая, как ptp, так и master-slave, например. Если я всё правильно уловил, уже есть работающий прототип.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Никита Ковалев</dc:creator><pubDate>Wed, 09 Dec 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:blog.maizy.ru,2015-12-09:/posts/scala-days-2015-sf</guid><category>scala</category><category>conference</category></item><item><title>FPConf 2015 - заметки на полях</title><link>https://blog.maizy.ru/posts/fpconf-2015</link><description>&lt;p&gt;Побывал на конференции &lt;a href="http://fpconf.ru/"&gt;FPConf&lt;/a&gt;. Поделюсь своими мыслями, возникшими при прослушивании докладов. Я в основном сидел на втором потоке, где было про scala, UI и пр. Первый поток был преимущественно про Erlang и Haskell.&lt;/p&gt;
&lt;p&gt;&lt;s&gt;Организаторы обещали, что будет видео, надеюсь пополнить эту статью ссылкам в будущем.&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;Upd 09.12.2015: дополнил.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://www.youtube.com/watch?v=Pu3D5GQ6UEg"&gt;Cамурайский путь молодого scala-программиста, Сергей Лобин, Sputnik.ru&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;В докладе было мало про scala, больше про проблемы при разработки геокодера в Спутнике. Главный печальный для всех фанатов Scala вывод – Scala в production и них не прижилась, найти разработчиков сложно, Go разработчиков найти значительно проще.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://www.youtube.com/watch?v=xd2xtQ61zKo"&gt;Макросы scala, Михаил Муцянко, JetBrains&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Хороший вводный доклад про макросы Scala от разработчика &lt;a href="http://blog.jetbrains.com/scala/"&gt;Scala plugin в IDEA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Из запомнившегося:&lt;/p&gt;
&lt;p&gt;Удобный способ построения AST в макросе через &lt;a href="http://docs.scala-lang.org/overviews/quasiquotes/intro.html"&gt;Q интерполятор&lt;/a&gt; (квазикватирование).&lt;/p&gt;
&lt;p&gt;Килер фича, когда Михаил нажатием одной волшебной кнопки прямо в IDEA, показал как разворачивается макрос в Scala код. К сожалению оказалось, что это не из production версии плагина и вроде ожидать такое в ближайшее время не стоит, так как работает не всегда корректно. Очень вкусная возможность, будем ждать.&lt;/p&gt;
&lt;p&gt;В 2.12 ожидается значительное улучшение в деле разработки макросов за счёт нового проекта &lt;a href="http://scalameta.org/"&gt;ScalaMeta&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Хорошая ссылка на изучение: What Are Macros Good For? от Евгения Бурмако &lt;a href="http://www.youtube.com/watch?v=4Rxo_7lrb7Y"&gt;YouTube&lt;/a&gt;, &lt;a href="http://scalamacros.org/paperstalks/2013-07-17-WhatAreMacrosGoodFor.pdf"&gt;слайды&lt;/a&gt;. BTW про самого Евгения и его работу над Scala макросами можно узнать в &lt;a href="http://eax.me/eaxcast-s02e10/"&gt;EaxCast S02E10&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Доклад рекомендую к просмотру.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://www.youtube.com/watch?v=q6H7T-8GOLk"&gt;Встраивание языка в строковой интерполятор, Михаил Лиманский, ЭСК&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Хороший практический доклад, как вместо DSL порой можно обойтись интерполятором. Какие возможности, плюсы и минусы такого подхода. Можно прямо брать доклад и писать свой интерполятор как по tutorial'у.&lt;/p&gt;
&lt;p&gt;В качестве домашнего задания для себя запомнил задачу реализовать интерполятор для типобезопасного форматирования строки. Хотим с &lt;a href="http://habrahabr.ru/users/aveic/"&gt;aveic&lt;/a&gt; попробовать независимо друг от друга реализовать это и посмотреть, что получиться.&lt;/p&gt;
&lt;p&gt;Рекомендую для тех, кто интересуется темой.&lt;/p&gt;
&lt;h3&gt;Lenses And Prisms, Эдвард Кметт&lt;/h3&gt;
&lt;p&gt;Самый звёздный докладчик на конференции. К сожалению без знания хотя бы основ синтаксиса Haskell понять что-то было сложно. Докладчик проводил доклад в потрясающей форме - выдавая как из пулемёта кучу кода на Haskell прями в vim'е.&lt;/p&gt;
&lt;p&gt;Чтобы понять что к чему, я смотрел на порт этой библиотеки на Scala - &lt;a href="https://github.com/julien-truffaut/Monocle"&gt;Monocle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;В общих словах – это удобный способ изменения иммутабельных структур с возможностью написания максимально абстрактных маленьких кусочков с дальнейшим комбинированием в более сложные кусочки.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Видео к сожалению не выложили.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://www.youtube.com/watch?v=Ev6diAO2FAI"&gt;Реактивные потоки в backend-е, Алексей Романчук, 2ГИС&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Хорошая success story про использование akka streams в production. Для меня теперь это один из ответов на вопрос «где нам нужна akka?».&lt;/p&gt;
&lt;p&gt;Забавные слайды с цветными "сосиками".&lt;/p&gt;
&lt;p&gt;Прозвучавшее число потерь на akka streams по сравнению с голыми акторами ~10%.&lt;/p&gt;
&lt;p&gt;Рекомендую всем, кому интересны akka streams.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://www.youtube.com/watch?v=__PLkxx6Yko"&gt;Scala performance для сомневающихся, Роман Гребенников, Sociohub.ru&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Самый запомнившийся доклад. Покрывает сразу две темы - пару примеров того как все модные молодёжные FP штуки из scala отражаются в bytecode JVM и машинном коде, какие потери они за собой несут или не несут. А также способы самому развернуть, померить и понять как выполняется тот или иной код.&lt;/p&gt;
&lt;p&gt;Вкратце про проблемы – простой pattern matching по типу параметра - также быстро как колбаса из if'ов. Есть проблемы с boxing/unboxing в Scala collection и прикладывать &lt;a href="http://www.scala-lang.org/api/2.11.4/index.html#scala.specialized"&gt;@specialized&lt;/a&gt; не поможет.&lt;/p&gt;
&lt;p&gt;Рекомендую к просмотру.&lt;/p&gt;
&lt;h3&gt;В общем&lt;/h3&gt;
&lt;p&gt;Очень приятное послевкусие от конференции, не ожидал, что про FP будет так целостно. Как сказали организаторы было 180 человек.&lt;/p&gt;
&lt;p&gt;Не посмотрел в живую &lt;a href="http://www.youtube.com/watch?v=cRWrrHPrk9g"&gt;«Фронтэнд без грусти» Никиты Прокопова&lt;/a&gt;, о котором наслышан от коллег, которые видели доклад на какой-то другой конференции. А также хочется поглядеть на &lt;a href="http://www.youtube.com/watch?v=w8D6Ibo_TDQ"&gt;«Aрхитектура UI на основе функциональных линз» от Ильи Беда&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;s&gt;Буду ждать видео.&lt;/s&gt; Дождались.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Никита Ковалев</dc:creator><pubDate>Mon, 17 Aug 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:blog.maizy.ru,2015-08-17:/posts/fpconf-2015</guid><category>conference</category><category>scala</category></item></channel></rss>