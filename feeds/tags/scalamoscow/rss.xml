<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>blog.maizy.ru - scala.moscow</title><link>https://blog.maizy.ru/</link><description></description><lastBuildDate>Wed, 28 Oct 2015 00:00:00 +0300</lastBuildDate><item><title>Шаблонизация с handlebars и json4s на scala</title><link>https://blog.maizy.ru/posts/handlerbars-templates-in-scala</link><description>&lt;p&gt;Занимаюсь неспешно своим проектом &lt;a href="https://github.com/scala-moscow/"&gt;scala.moscow&lt;/a&gt;. Одна из задач – примитивный генератор статических сайтов. Очень хотелось чего-то простого для шаблонизации. Думал взять mustache, но оказалось, что это уже не совсем модно-молодёжно, так как есть его расширения handlebars и hogan.&lt;/p&gt;
&lt;p&gt;Handlebars мне больше приглянулся. Для scala есть нативная реализация на парсер комбинаторах
&lt;a href="https://github.com/mwunsch/handlebars.scala"&gt;handlebars.scala&lt;/a&gt; и её &lt;a href="https://github.com/gilt/handlebars.scala.fork"&gt;форк&lt;/a&gt;. По фичам scala реализация очень ограничена, в частности, нет встроенной поддержки наследования шаблонов, которая в handlebars делается не силами шаблонизатора, а силами helper'ов. В итоге взял &lt;a href="https://github.com/jknack/handlebars.java"&gt;handlebars.java&lt;/a&gt;, который выглядит достаточно зрелым и имеет в составе, как минимум, helper'ы &lt;code&gt;partial&lt;/code&gt; и &lt;code&gt;block&lt;/code&gt; для наследования и i18n.&lt;/p&gt;
&lt;p&gt;После выбора шаблонизатора встал вопрос как в него загружать данные. Встроенные резолверы не удобно использовать в scala, да и хотелось чего-то более простого, чем создания пачки классов-контейнеров для данных. А что есть проще для описания примитивных структур данных, чем JSON. Для scala нашёлся отличный DSL для JSON - &lt;a href="http://json4s.org/"&gt;json4s&lt;/a&gt;, у которого в частности есть такой лаконичный DSL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.json4s.JsonDSL._&lt;/span&gt;

&lt;span class="k"&gt;val&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;=&lt;/span&gt;
    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;year&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2015&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;assets&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;path&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/assets&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;scala.moscow&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
      &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
      &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;about&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;about&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
        &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;scala.moscow :: о проекте&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Плюс к этому handlebars и задумывался для комбинации с JSON, что отражается в его синтаксисе. Плюс к этому сразу решается вопрос, где хранить статические данные, которые не нужно генерить программно –  в JSON файлах. В json4s конечно есть не только DSL, но и парсеры на основе нативной scala реализации и jackson.&lt;/p&gt;
&lt;p&gt;Чтобы подружить handlebars.java и json4s DSL, написал &lt;a href="https://github.com/scala-moscow/scala.moscow/blob/master/site-generator/src/main/scala/moscow/scala/sitegen/utils/template/JValueResolver.scala"&gt;ValueResolver&lt;/a&gt;, идею и часть реализации подсмотрел у &lt;a href="https://github.com/mfirry/handlebars-json4s/"&gt;handlebars-json4s&lt;/a&gt;, но доработал её, решил часть проблем и дописал тестов. Как решу &lt;a href="https://github.com/scala-moscow/scala.moscow/blob/4d31fad70f7bccd8097de21637f820375af41b52/site-generator/src/test/scala/moscow/scala/sitegen/tests/utils/template/JValueResolverSpec.scala#L86-L93"&gt;оставшиеся проблемы&lt;/a&gt; планирую сделать отдельный артефакт.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Никита Ковалев</dc:creator><pubDate>Wed, 28 Oct 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:blog.maizy.ru,2015-10-28:/posts/handlerbars-templates-in-scala</guid><category>scala</category><category>scala.moscow</category></item></channel></rss>